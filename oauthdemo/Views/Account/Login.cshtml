@model oauthdemo.Models.LoginModel

@{
    ViewBag.Title = "Log in";
}

<h2>Use a local account to log in</h2>
@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Log in Form</legend>
        <div class="control-group error">
            @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.UserName)
            @Html.ValidationMessageFor(m => m.UserName, "Username is required", new { @class = "help-inline" })
        </div>
        <div class="control-group error">
            @Html.LabelFor(m => m.Password, new { @class = "control-label" })
            @Html.PasswordFor(m => m.Password)
            @Html.ValidationMessageFor(m => m.Password, "Password is required", new { @class = "help-inline" })
        </div>
        <div class="control-group">
            <label class="checkbox">
            @Html.CheckBoxFor(m => m.RememberMe)
            @Html.LabelFor(m => m.RememberMe, new { @class = "checkbox" })
            </label>
        </div>

        <input type="submit" class="btn btn-primary" value="Log in" />
    </fieldset>
}
<p>
    @Html.ActionLink("Register", "Register") if you don't have an account.
</p>

<h2>Use another service to log in.</h2>
@Html.Action("ExternalLoginsList", new { ReturnUrl = ViewBag.ReturnUrl })

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
